# -------------------------
# NGINX SERVER CONFIGURATION
# -------------------------
server {
    listen 80;
    server_name bonasodataviewer.space www.bonasodataviewer.space;
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl; 
    server_name bonasodataviewer.space www.bonasodataviewer.space; 

    ssl_certificate /etc/letsencrypt/live/bonasodataviewer.space/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bonasodataviewer.space/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    root /usr/share/nginx/html; # default root for static frontend build (React)

    # -------------------------
    # FRONTEND (React SPA)
    # -------------------------
    # Important: React is a Single Page App (SPA).
    # If nginx can't find a matching file, it should serve index.html
    # so the React router can handle the path (prevents 404s on reload).
    location / {
        try_files $uri /index.html;
    }

    # -------------------------
    # BACKEND (Django + Gunicorn via Docker service "backend")
    # -------------------------
    # Any request starting with /api/ gets proxied to the backend service.
    # Note: "backend" matches the service name in docker-compose (internal DNS).
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # -------------------------
    # DJANGO STATIC FILES
    # -------------------------
    # These are collected with `collectstatic`.
    # Use alias instead of root to map directly to mounted volume (/static).
    location /static/ {
        alias /static/;
        expires 30d;
        add_header Cache-Control "public";
    }
    # -------------------------
    # DJANGO MEDIA FILES
    # -------------------------
    # User-uploaded files (images, docs, etc.).
    # Don't cache because they may change.
    location /media/ {
        alias /media/;
        expires off;
    }

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
}